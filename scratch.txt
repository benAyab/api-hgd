// Default Array Output Format
result = await connection.execute(sql);
console.log("----- Banana Farmers (default ARRAY output format) --------");
console.log(result.rows);

// Optional Object Output Format
result = await connection.execute(
    sql,
    [], // A bind parameter is needed to disambiguate the following options parameter and avoid ORA-01036
    {
    outFormat: oracledb.OUT_FORMAT_OBJECT,     // outFormat can be OBJECT or ARRAY.  The default is ARRAY
    // fetchArraySize: 100                     // internal buffer allocation size for tuning
    }
);
console.log("----- Banana Farmers (default OBJECT output format) --------");
console.log(result.rows);


app.use(session({
    secret: process.env.SESSION_KEY,
    resave: false,
    store: new LokiStore({path: './sessions/session.db'}),
    saveUninitialized: true,
    cookie: {
      maxAge: 1000 * 60
    }
}));



*** Get token ***
Request Auth header name + value: "Authorization": "Bearer TOKEN"

*** Request to pay ***

Headers: ["AUTH-API-SUBSCRIPTION": process.env.ADWAPAY_SUBSCRIPTION, 
"AUTH-API-TOKEN": "Bearer V03-64dc794e-251a-4daf-90ef-5a2baf66f8e1"]

body: {
  "meanCode": "ORANGE-MONEY",
  "paymentNumber": "698530658",
  "orderNumber": "HDGLATEST24", //To be generated buy backend
  "amount": 50000,
  "currency": "XAF",
  "feesAmount": "0"
}


*** getFees  ***

{
  pesake: { code: '', level: '', detail: null },
  data: [
    {
      meanCode: 'YOOMEE-MONEY',
      isCard: 0,
      feesAmount: 10,
      amountToCurrency: 1000,
      rateValue: '1.00000000',
      hasFees: 1,
      currency: 'XAF',
      decimalPart: 0
    },
    {
      meanCode: 'ORANGE-MONEY',
      isCard: 0,
      feesAmount: 10,
      amountToCurrency: 1000,
      rateValue: '1.00000000',
      hasFees: 1,
      currency: 'XAF',
      decimalPart: 0
    },
    {
      meanCode: 'MOBILE-MONEY',
      isCard: 0,
      feesAmount: 10,
      amountToCurrency: 1000,
      rateValue: '1.00000000',
      hasFees: 1,
      currency: 'XAF',
      decimalPart: 0
    },
    {
      meanCode: 'EXPRESS-UNION',
      isCard: 0,
      feesAmount: 10,
      amountToCurrency: 1000,
      rateValue: '1.00000000',
      hasFees: 1,
      currency: 'XAF',
      decimalPart: 0
    }
  ]
}

// #### backend API path ####

*** login ***
PATH: /api/v1/user/login
BODY: {
  login: "" // Login user
  password: "" //user's password
}

RESPONSE: 
### successfull ###
{
  token: "TOKEN",
  expire: //time expiration in ms
  expire_date: 
}

### error ###
status_code: //to check
{
  error: "" // name error,
  message: "" // detail about error
}

*** payment ***
PATH: /api/v1/payment/requestToPay

Headers: {
  "Authorization": "Bearer "+token
}

BODY: {
  amount: Number,
  meanCode: String // One of: 'YOOMEE-MONEY', 'ORANGE-MONEY', 'MOBILE-MONEY', 'EXPRESS-UNION',
  paymentNumber: String // Telephone No of Client,
  numeroDos: String //Nuemro du dossier Client
}

*** check status ***
PATH: /api/v1/payment/checkPaymentStatus

Headers: {
  "Authorization": "Bearer "+token
}

BODY: {
  meanCode: String // One of: 'YOOMEE-MONEY', 'ORANGE-MONEY', 'MOBILE-MONEY', 'EXPRESS-UNION',
  adpFootprint: "HOPITALGENERALDLA_81DEFBA1BEEBB",
}
